<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.com.guilongkeji.zsst.mapper.SysUserMapper">
  <resultMap id="BaseResultMap" type="cn.com.guilongkeji.zsst.pojo.SysUser">
    <!--
      WARNING - @mbg.generated
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="salt" jdbcType="VARCHAR" property="salt" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="role_ids" jdbcType="VARCHAR" property="roleIds" />
    <result column="locked" jdbcType="TINYINT" property="locked" />
  </resultMap>
  <parameterMap id="BaseParameterMap" type="cn.com.guilongkeji.zsst.pojo.SysUser">
    <parameter resultMap="BaseResultMap" jdbcType="VARCHAR" property="username" />
    <parameter resultMap="BaseResultMap" jdbcType="VARCHAR" property="password" />
    <parameter resultMap="BaseResultMap" jdbcType="VARCHAR" property="salt" />
    <parameter resultMap="BaseResultMap" jdbcType="VARCHAR" property="phone" />
    <parameter resultMap="BaseResultMap" jdbcType="VARCHAR" property="roleIds" />
    <parameter resultMap="BaseResultMap" jdbcType="TINYINT" property="locked" />
  </parameterMap>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
    -->
    id, username, password, salt, phone, role_ids, locked
  </sql>
  <sql id="BaseExcludeId">
    username, password, salt, phone, role_ids, locked
  </sql>
  <sql id="content">
    #{username},#{password},#{salt},#{phone},#{roleIds},#{locked}
  </sql>
  <select id="findByUsername" resultMap="BaseResultMap">
    select <include refid="Base_Column_List"></include> from sys_user where username = #{username}
  </select>
  <select id="getByUsernameAndPassword" resultMap="BaseResultMap">
    select <include refid="Base_Column_List"></include> from sys_user where username = #{param1} and password = #{param2}
  </select>
  <select id="getAllUser" resultMap="BaseResultMap">
    select <include refid="Base_Column_List"></include> from sys_user
  </select>
    <select id="getAllUserByIds" resultMap="BaseResultMap">
      select <include refid="Base_Column_List"></include> from sys_user where id
     in (
      <choose>
        <when test="list.size>0">
          <foreach collection="list" item="i" separator=",">
            #{i}
          </foreach>
        </when>
        <otherwise>
          -1
        </otherwise>
      </choose>


      )
    </select>
  <select id="getAllUserExcludeIds" resultMap="BaseResultMap">
    select <include refid="Base_Column_List"></include> from sys_user where id
    not in (
    <choose>
      <when test="list.size>0">
        <foreach collection="list" item="i" separator=",">
          #{i}
        </foreach>
      </when>
      <otherwise>
        -1
      </otherwise>
    </choose>
    )
  </select>
  <select id="getUserByRolesOne" resultMap="BaseResultMap">
    select <include refid="Base_Column_List"></include> from sys_user where role_ids = "1"
  </select>
  <insert id="addSysUser" parameterMap="BaseParameterMap">
    insert into sys_user (<include refid="BaseExcludeId"></include>) values (<include refid="content"></include>)
  </insert>
    <insert id="addAllSysUser">
      insert into sys_user(<include refid="BaseExcludeId"></include>) values
      <foreach collection="list" separator="," item="i">
        (#{i.username},#{i.password},#{i.salt},#{i.phone},#{i.roleIds},#{i.locked})
      </foreach>
    </insert>
    <update id="updateSysUser" parameterMap="BaseParameterMap">
    update set sys_user (username=#{username},password=#{password},salt=#{salt},phone=#{phone},role_ids=#{roleIds},locked=#{locked}) where id = #{id}
  </update>
  <update id="updateAllSysUser">
    <foreach collection="list" item="i" separator=",">
      update set sys_user values (
      username=#{i.username},password=#{i.password},salt=#{i.salt},phone=#{i.phone},role_ids=#{i.roleIds},locked=#{i.locked}) where id = #{i.id}
      )
    </foreach>
  </update>
</mapper>